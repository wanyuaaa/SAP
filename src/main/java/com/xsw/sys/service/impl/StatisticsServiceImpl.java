package com.xsw.sys.service.impl;

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xsw.common.entry.SysLoanValue;
import com.xsw.common.entry.SysNumValue;
import com.xsw.common.entry.SysPurchValue;
import com.xsw.common.entry.SysReimValue;
import com.xsw.common.entry.SysStatisticsValue;
import com.xsw.common.entry.SysTaskValue;
import com.xsw.common.vo.UserResult;
import com.xsw.sys.mapper.SelectMapper;
import com.xsw.sys.mapper.StatisticsMapper;
import com.xsw.sys.service.StatisticsService;

@Service
public class StatisticsServiceImpl implements StatisticsService {

	@Autowired
	private SelectMapper selectMapper;

	@Autowired
	private StatisticsMapper statisticsMapper;

	@Override
	public UserResult selectAllstatistics() {
		UserResult userResult = new UserResult();

		int allTaskCount = statisticsMapper.selectAllTaskCount();
		int allReimCount = statisticsMapper.selectAllReimCount();
		int allPurchCount = statisticsMapper.selectAllPurchCount();
		int allLoanCount = statisticsMapper.selectAllLoanCount();
		int allUserCount = selectMapper.selectAllUserCount();

		SysNumValue sysNumValue = new SysNumValue();
		sysNumValue.setUserCount(allUserCount);
		sysNumValue.setTaskCount(allTaskCount);
		sysNumValue.setReimCount(allReimCount);
		sysNumValue.setPurchCount(allPurchCount);
		sysNumValue.setLoanCount(allLoanCount);
		userResult.setData(sysNumValue);

		return userResult;
	}

	@Override
	public UserResult selectAllTotalpriceStatistics() {
		UserResult userResult = new UserResult();
		double allTaskTitalprice = 0;
		double allReimTitalprice = 0;
		double allPurchTitalprice = 0;
		double allLoanTitalprice = 0;
		int allUserCount = selectMapper.selectAllUserCount();

		List<SysTaskValue> sysTaskValue = statisticsMapper.selectAllTaskTitalprice();
		List<SysReimValue> sysReimValue = statisticsMapper.selectAllReimTitalprice();
		List<SysPurchValue> sysPurchValue = statisticsMapper.selectAllPurchTitalprice();
		List<SysLoanValue> sysLoanValue = statisticsMapper.selectAllLoanTitalprice();

		for (int i = 0; i < sysTaskValue.size(); i++) {
			String totalPrice = sysTaskValue.get(i).getTotalPrice();
			double d1 = Double.valueOf(totalPrice);
			BigDecimal b1 = new BigDecimal(Double.toString(d1));
			BigDecimal b2 = new BigDecimal(Double.toString(allTaskTitalprice));
			allTaskTitalprice = b2.add(b1).doubleValue();
		}

		for (int i = 0; i < sysReimValue.size(); i++) {
			String totalPrice = sysReimValue.get(i).getPrice();
			double d1 = Double.valueOf(totalPrice);
			BigDecimal b1 = new BigDecimal(Double.toString(d1));
			BigDecimal b2 = new BigDecimal(Double.toString(allReimTitalprice));
			allReimTitalprice = b2.add(b1).doubleValue();
		}

		for (int i = 0; i < sysPurchValue.size(); i++) {
			String totalPrice = sysPurchValue.get(i).getPrice();
			double d1 = Double.valueOf(totalPrice);
			BigDecimal b1 = new BigDecimal(Double.toString(d1));
			BigDecimal b2 = new BigDecimal(Double.toString(allPurchTitalprice));
			allPurchTitalprice = b2.add(b1).doubleValue();
		}

		for (int i = 0; i < sysLoanValue.size(); i++) {
			String totalPrice = sysLoanValue.get(i).getPrice();
			double d1 = Double.valueOf(totalPrice);
			BigDecimal b1 = new BigDecimal(Double.toString(d1));
			BigDecimal b2 = new BigDecimal(Double.toString(allLoanTitalprice));
			allLoanTitalprice = b2.add(b1).doubleValue();
		}

		SysNumValue sysNumValue = new SysNumValue();
		sysNumValue.setUserCount(allUserCount);
		sysNumValue.setAllTask(allTaskTitalprice + "");
		sysNumValue.setAllReim(allReimTitalprice + "");
		sysNumValue.setAllPurch(allPurchTitalprice + "");
		sysNumValue.setAllLoan(allLoanTitalprice + "");

		userResult.setData(sysNumValue);

		return userResult;
	}

	@Override
	public UserResult selectAllTotalpriceStatisticsBySix() {
		UserResult userResult = new UserResult();

		SysStatisticsValue sysStatisticsValue = new SysStatisticsValue();

		SimpleDateFormat tempDate = new SimpleDateFormat("yyyy/MM");
		String datetime = tempDate.format(new java.util.Date());

		String[] arr = datetime.split("/");
		String a = arr[0];
		String b = arr[1];
		int aParseInt = Integer.parseInt(a) - 1;
		List<String> mouth = new ArrayList<String>();
		List<String> taskList = new ArrayList<String>();
		List<String> reimList = new ArrayList<String>();
		List<String> purchList = new ArrayList<String>();
		List<String> loanList = new ArrayList<String>();

		String task1 = "0";
		String task2 = "0";
		String task3 = "0";
		String task4 = "0";
		String task5 = "0";
		String task6 = "0";

		String reim1 = "0";
		String reim2 = "0";
		String reim3 = "0";
		String reim4 = "0";
		String reim5 = "0";
		String reim6 = "0";

		String purch1 = "0";
		String purch2 = "0";
		String purch3 = "0";
		String purch4 = "0";
		String purch5 = "0";
		String purch6 = "0";

		String loan1 = "0";
		String loan2 = "0";
		String loan3 = "0";
		String loan4 = "0";
		String loan5 = "0";
		String loan6 = "0";

		switch (b) {
		case "01":
			mouth.add(0, aParseInt + "/07");
			mouth.add(1, aParseInt + "/08");
			mouth.add(2, aParseInt + "/09");
			mouth.add(3, aParseInt + "/10");
			mouth.add(4, aParseInt + "/11");
			mouth.add(5, aParseInt + "/12");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "02":
			mouth.add(0, aParseInt + "/08");
			mouth.add(1, aParseInt + "/09");
			mouth.add(2, aParseInt + "/10");
			mouth.add(3, aParseInt + "/11");
			mouth.add(4, aParseInt + "/12");
			mouth.add(5, a + "/01");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "03":
			mouth.add(0, aParseInt + "/09");
			mouth.add(1, aParseInt + "/10");
			mouth.add(2, aParseInt + "/11");
			mouth.add(3, aParseInt + "/12");
			mouth.add(4, a + "/01");
			mouth.add(5, a + "/02");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "04":
			mouth.add(0, aParseInt + "/10");
			mouth.add(1, aParseInt + "/11");
			mouth.add(2, aParseInt + "/12");
			mouth.add(3, a + "/01");
			mouth.add(4, a + "/02");
			mouth.add(5, a + "/03");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "05":
			mouth.add(0, aParseInt + "/11");
			mouth.add(1, aParseInt + "/12");
			mouth.add(2, a + "/01");
			mouth.add(3, a + "/02");
			mouth.add(4, a + "/03");
			mouth.add(5, a + "/04");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "06":
			mouth.add(0, aParseInt + "/12");
			mouth.add(1, a + "/01");
			mouth.add(2, a + "/02");
			mouth.add(3, a + "/03");
			mouth.add(4, a + "/04");
			mouth.add(5, a + "/05");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "07":
			mouth.add(0, a + "/01");
			mouth.add(1, a + "/02");
			mouth.add(2, a + "/03");
			mouth.add(3, a + "/04");
			mouth.add(4, a + "/05");
			mouth.add(5, a + "/06");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "08":
			mouth.add(0, a + "/02");
			mouth.add(1, a + "/03");
			mouth.add(2, a + "/04");
			mouth.add(3, a + "/05");
			mouth.add(4, a + "/06");
			mouth.add(5, a + "/07");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "09":
			mouth.add(0, a + "/03");
			mouth.add(1, a + "/04");
			mouth.add(2, a + "/05");
			mouth.add(3, a + "/06");
			mouth.add(4, a + "/07");
			mouth.add(5, a + "/08");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "10":
			mouth.add(0, a + "/04");
			mouth.add(1, a + "/05");
			mouth.add(2, a + "/06");
			mouth.add(3, a + "/07");
			mouth.add(4, a + "/08");
			mouth.add(5, a + "/09");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "11":
			mouth.add(0, a + "/05");
			mouth.add(1, a + "/06");
			mouth.add(2, a + "/07");
			mouth.add(3, a + "/08");
			mouth.add(4, a + "/09");
			mouth.add(5, a + "/10");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		case "12":
			mouth.add(0, a + "/06");
			mouth.add(1, a + "/07");
			mouth.add(2, a + "/08");
			mouth.add(3, a + "/09");
			mouth.add(4, a + "/10");
			mouth.add(5, a + "/11");
			task1 = statisticsMapper.selectTaskCount(mouth.get(0));
			task2 = statisticsMapper.selectTaskCount(mouth.get(1));
			task3 = statisticsMapper.selectTaskCount(mouth.get(2));
			task4 = statisticsMapper.selectTaskCount(mouth.get(3));
			task5 = statisticsMapper.selectTaskCount(mouth.get(4));
			task6 = statisticsMapper.selectTaskCount(mouth.get(5));
			taskList.add(0, task1);
			taskList.add(1, task2);
			taskList.add(2, task3);
			taskList.add(3, task4);
			taskList.add(4, task5);
			taskList.add(5, task6);
			reim1 = statisticsMapper.selectReimCount(mouth.get(0));
			reim2 = statisticsMapper.selectReimCount(mouth.get(1));
			reim3 = statisticsMapper.selectReimCount(mouth.get(2));
			reim4 = statisticsMapper.selectReimCount(mouth.get(3));
			reim5 = statisticsMapper.selectReimCount(mouth.get(4));
			reim6 = statisticsMapper.selectReimCount(mouth.get(5));
			reimList.add(0, reim1);
			reimList.add(1, reim2);
			reimList.add(2, reim3);
			reimList.add(3, reim4);
			reimList.add(4, reim5);
			reimList.add(5, reim6);
			purch1 = statisticsMapper.selectPurchCount(mouth.get(0));
			purch2 = statisticsMapper.selectPurchCount(mouth.get(1));
			purch3 = statisticsMapper.selectPurchCount(mouth.get(2));
			purch4 = statisticsMapper.selectPurchCount(mouth.get(3));
			purch5 = statisticsMapper.selectPurchCount(mouth.get(4));
			purch6 = statisticsMapper.selectPurchCount(mouth.get(5));
			purchList.add(0, purch1);
			purchList.add(1, purch2);
			purchList.add(2, purch3);
			purchList.add(3, purch4);
			purchList.add(4, purch5);
			purchList.add(5, purch6);
			loan1 = statisticsMapper.selectLoanCount(mouth.get(0));
			loan2 = statisticsMapper.selectLoanCount(mouth.get(1));
			loan3 = statisticsMapper.selectLoanCount(mouth.get(2));
			loan4 = statisticsMapper.selectLoanCount(mouth.get(3));
			loan5 = statisticsMapper.selectLoanCount(mouth.get(4));
			loan6 = statisticsMapper.selectLoanCount(mouth.get(5));
			loanList.add(0, loan1);
			loanList.add(1, loan2);
			loanList.add(2, loan3);
			loanList.add(3, loan4);
			loanList.add(4, loan5);
			loanList.add(5, loan6);
			sysStatisticsValue.setFourth(loanList);
			sysStatisticsValue.setDate(mouth);
			sysStatisticsValue.setFirst(taskList);
			sysStatisticsValue.setSecond(reimList);
			sysStatisticsValue.setThird(purchList);
			break;
		}

		userResult.setData(sysStatisticsValue);

		return userResult;
	}

}
